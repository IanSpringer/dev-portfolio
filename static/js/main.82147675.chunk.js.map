{"version":3,"sources":["fonts/Qardoos.otf","logo.svg","components/Letter.js","components/Title.js","components/Banner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Letter","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","data-index","index","letter","Component","Title","_this","buildName","bind","assertThisInitialized","fadeText","state","name","title","word","split","map","key","components_Letter","element","Array","from","document","querySelectorAll","setTimeout","classList","add","Drum","components_Title","App","components_Banner","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8KAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8KCgBzBC,qBAZb,SAAAA,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACZH,0EAKN,OACEO,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBC,aAAYR,KAAKH,MAAMY,OAAQT,KAAKH,MAAMa,eAR5DC,cC4CNC,cA1Cb,SAAAA,EAAYf,GAAO,IAAAgB,EAAA,OAAAf,OAAAC,EAAA,EAAAD,CAAAE,KAAAY,IACjBC,EAAAf,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAc,GAAAT,KAAAH,KAAMH,KACDiB,UAAYD,EAAKC,UAAUC,KAAfjB,OAAAkB,EAAA,EAAAlB,CAAAe,IACjBA,EAAKI,SAAWJ,EAAKI,SAASF,KAAdjB,OAAAkB,EAAA,EAAAlB,CAAAe,IAChBA,EAAKK,MAAQ,CACXC,KAAM,eACNC,MAAO,iBANQP,mFAWjBb,KAAKiB,SAAS,qDAGNI,GACR,OAAOA,EAAKC,MAAM,IAAIC,IAAI,SAACb,EAAQc,GAAT,OAAiBpB,EAAAC,EAAAC,cAACmB,EAAD,CAAQf,OAAQA,EAAQD,MAAOe,uCAGnEE,GACWC,MAAMC,KAAKC,SAASC,iBAAiB,oBAC3CP,IAAI,SAACb,EAAQc,GAIvB,OAHAO,WAAW,WACTrB,EAAOsB,UAAUC,IAAI,cACpB,KAAOT,EAAM,IACTd,qCAKT,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACXP,KAAKc,UAAUd,KAAKkB,MAAMC,OAE7Bf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBACXP,KAAKc,UAAUd,KAAKkB,MAAME,gBApCjBT,aCiBLuB,qBAdb,SAAAA,EAAYrC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,GAAApC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoC,GAAA/B,KAAAH,KACZH,0EAKN,OACEO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAC6B,EAAD,cATWxB,cCUJyB,sMARX,OACEhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+B,EAAD,cAJU1B,cCME2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAAShB,SAASiB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.82147675.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Qardoos.18e9fc29.otf\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport '../styles/Letter.css';\n\nclass Letter extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    return (\n      <span className=\"banner__letter\" data-index={this.props.index}>{this.props.letter}</span>\n    )\n  }\n}\n\nexport default Letter;\n","\nimport React, { Component } from 'react';\nimport Letter from './Letter'\n\nclass Title extends Component {\n  constructor(props) {\n    super(props);\n    this.buildName = this.buildName.bind(this);\n    this.fadeText = this.fadeText.bind(this)\n    this.state = {\n      name: \"Ian Springer\",\n      title: \"Web Developer\"\n    }\n  }\n\n  componentDidMount() {\n    this.fadeText('.banner__letter');\n  }\n\n  buildName(word) {\n    return word.split('').map((letter, key) => <Letter letter={letter} index={key}/>)\n  }\n\n  fadeText(element) {\n    let stringArray = Array.from(document.querySelectorAll('.banner__letter'));\n    stringArray.map((letter, key) => {\n      setTimeout(() => {\n        letter.classList.add('is-active');\n      }, 120 * (key + 1));\n      return letter;\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"banner__wrap\">\n        <h1 className=\"banner__title noto\">\n          {this.buildName(this.state.name)}\n        </h1>\n        <h2 className=\"banner__subtitle noto\">\n          {this.buildName(this.state.title)}\n        </h2>\n      </div>\n    )\n  }\n}\n\nexport default Title;\n","\nimport React, { Component } from 'react';\nimport Title from \"./Title\";\n\nimport '../styles/Banner.css'\n\nclass Drum extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    return (\n      <div className=\"banner\">\n        <Title />\n      </div>\n    )\n  }\n}\n\nexport default Drum;\n","import React, { Component } from 'react';\nimport Banner from './components/Banner';\nimport qardoos from './fonts/Qardoos.otf';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Banner />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}